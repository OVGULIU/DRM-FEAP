CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE GENLOAD (NUMNP,NINCR,NDF,INDE,RHSG)                   C
C     SUBRUTINA PARA ESCRIBIR EL ARCHIVO 'LOAD' DE FEAP                C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
      SUBROUTINE GENLOADPS(NUMNP,NINCR,NDF,INDE,RHSG)
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION INDE(NUMNP),RHSG(NDF*NUMNP,NINCR)

C
      IULOA=103
      OPEN(UNIT=IULOA,FILE='LOAD')
C
      DO I=1,NINCR
        IF (I.EQ.NINCR/2) WRITE(*,*)'WRITING TIME', I
        WRITE(IULOA,'(A5)') 'FORCe'
        DO J=1,NUMNP
          FX=RHSG(NDF*J-1,I)
          FY=RHSG(NDF*J  ,I)
          WRITE(IULOA,10) INDE(J),0,FX,FY
        END DO
        WRITE(IULOA,'(A25)') '!Blank termination record'
        WRITE(IULOA,'(A3)') 'END'
      END DO
C
      CLOSE(IULOA)
C
   10 FORMAT (I10,1X,I2,2(1X,1E14.5e4))
      RETURN
C
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE GENLOAD                                               C
C     SUBRUTINA PARA ESCRIBIR EL ARCHIVO 'LOAD' DE FEAP                C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
      SUBROUTINE GENLOADSH(NUMNP,NINCR,NDF,INDE,RHSG)
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION INDE(NUMNP),RHSG(NDF*NUMNP,NINCR)

C
      IULOA=103
      OPEN(UNIT=IULOA,FILE='LOAD')
C
      DO I=1,NINCR
        IF (I.EQ.NINCR/2) WRITE(*,*)'WRITING TIME', I
        WRITE(IULOA,'(A5)') 'FORCe'
        DO J=1,NUMNP
          F=RHSG(J,I)
          WRITE(IULOA,10) INDE(J),0,F
        END DO
        WRITE(IULOA,'(A25)') '!Blank termination record'
        WRITE(IULOA,'(A3)') 'END'
      END DO
C
      CLOSE(IULOA)
C
   10 FORMAT (I10,1X,I2,(1X,1E14.5e4))
      RETURN
C
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE PRINTI                                                C
C                                                                      C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      SUBROUTINE PRINTI(NFIL,NCOL,IMATRIX,IOUT)
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION IMATRIX(NFIL,NCOL)
C
      DO I=1,NFIL
         WRITE(IOUT,*)(IMATRIX(I,J),J=1,NCOL)
      END DO
C
      RETURN
C
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     SUBROUTINE PRINTR                                                C
C                                                                      C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C23456789012345678901234567890123456789012345678901234567890123456789012
C
      SUBROUTINE PRINTR(NFIL,NCOL,AMATRIX,IOUT)
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      DIMENSION AMATRIX(NFIL,NCOL)
C
      DO I=1,NFIL
         WRITE(IOUT,*)(AMATRIX(I,J),J=1,NCOL)
      END DO
C
      RETURN
C
      END
C
C        END MODULE POSTPROC
